##############
# completion #
##############

autoload colors
zstyle ':completion:*' completer _expand_alias _complete _ignored

zstyle ':completion:*:descriptions' format '%F{blue} %B%d%b%f'
zstyle ':completion:*:warnings' format '%F{yello} No matches for: %d%f'

zstyle ':completion:*' group-name ''
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' menu select=2
zstyle ':completion:*' verbose yes

###############
# my commands #
###############
function zle-keymap-select () {
  case $KEYMAP in
    vicmd) echo -ne '\e[1 q';;
    viins|main) echo -ne '\e[5 q';;
  esac
}
zle -N zle-keymap-select

function zle-line-init() {
  zle -K viins
  echo -ne "\e[5 q"
}
zle -N zle-line-init

echo -ne '\e[5 q'
function preexec() { echo -ne '\e[5 q'; }

function zsh-history() {
  BUFFER=`history -n 1 | fzf --query "$BUFFER"`
  CURSOR=$#BUFFER
  zle reset-prompt
}

function zvm_after_init() {
  zvm_define_widget zsh-history zsh-history
  zvm_bindkey viins '^R' zsh-history
}

function tm() {
  if ! tmux has-session 2>/dev/null; then
    tmux new-session -s main -c "${HOME}" -d
  fi

  target=$(
    tmux list-sessions -F "#S" | fzf \
      --header='Ctrl+C: new | Ctrl-D: delete' \
      --bind='ctrl-c:reload(zoxide query --list)' \
      --bind='ctrl-d:execute(tmux kill-session -t {1})+reload(tmux list-sessions -F "#S")'
  )

  if [ -z "${target}" ]; then
    return
  fi

  if ! tmux has-session -t "${target}" 2>/dev/null; then
    session_name=$(basename "${target}")
    tmux new-session -s $session_name -c "${target}" -d
    target="${session_name}"
  fi

  if [ -z "${TMUX}" ]; then
    tmux attach-session -t "${target}"
  else
    tmux switch-client -t "${target}"
  fi
}
