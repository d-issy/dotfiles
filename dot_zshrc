###############
# environment #
###############
export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache
export XDG_DATA_HOME=$HOME/.local/share

fpath=(
  $HOME/.config/zsh/plugins/zsh-completions/src(N-/)
  $HOME/.asdf/completions(N-/)
  $fpath
)

path=(
  $HOME/bin(N-/)
  $path
)

export EDITOR=vim

##############
# completion #
##############
autoload -U compinit
compinit

autoload colors

zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' list-colors ''

###########
# history #
###########
setopt appendhistory
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt hist_no_store

HISTFILE=$HOME/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

############
# commands #
############

# asdf
if [ -d $HOME/.asdf ]; then
  . $HOME/.asdf/asdf.sh
fi

# starship
if (( $+commands[starship] )); then
  eval "$(starship init zsh)"
fi

# zoxide
if (( $+commands[zoxide] )); then
  eval "$(zoxide init zsh)"
fi

if (( $+commands[thefuck] )); then
  eval $(thefuck --alias)
fi

# zsh syntax highlight
if [ -e $XDG_CONFIG_HOME/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
  source $XDG_CONFIG_HOME/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# zsh autosuggestions
if [ -e $XDG_CONFIG_HOME/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
  source $XDG_CONFIG_HOME/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# fzf
if (( $+commands[fzf] )); then
  export FZF_DEFAULT_OPTS='--reverse --height 40%'
fi

# EDITOR
if (( $+commands[nvim] )); then
  alias v=nvim
  export EDITOR=nvim
else
  alias v=vim
  export EDITOR=vim
fi

################
# own commands #
################
zsh-history() {
  if (( $+commands[fzf] )); then
    BUFFER=`history -n 1 | fzf --query "$BUFFER"`
    CURSOR=$#BUFFER
    zle reset-prompt
  else
    zle history-incremental-search-backward
  fi
}
zle -N zsh-history

ssm() {
  local profile=$(aws configure list-profiles | fzf)
  local target=$(aws --profile $profile ec2 describe-instances --filters 'Name=instance-state-name,Values=running' --query 'Reservations[*].Instances[*].[Tags[?Key==`Name`]|[0].Value, InstanceId]' --output text | fzf | cut -f2)
  if [ -n "$target" ] ; then
    aws --profile $profile ssm start-session --target $target
  fi
}

###########
# bindkey #
###########

# vi
bindkey -v
bindkey -M viins '^A' beginning-of-line
bindkey -M viins '^E' end-of-line
bindkey -M viins '^N' down-line-or-history
bindkey -M viins '^P' up-line-or-history

# own
bindkey -M viins '^R' zsh-history

# vim: set ft=zsh :

